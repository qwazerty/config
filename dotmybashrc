#! /bin/bash

#################################
# dotmybashrc config file       #
# by Kevin "qwazerty" Houdebert #
# houdeb_k / EPITA 2015         #
#################################

# Environment
export EDITOR='vim'
if [ -e /usr/bin/vimpager ]; then
    export PAGER='vimpager'
else
    export PAGER='less'
fi

# Color variables for PS1
rt='\[\e[0;38;5;\$(`echo $(($(date +%-H) * 6 + $(date +%-M) + 17))`)m\]'
#rt='\[\e[0;36m\]'
cb='\[\e[0;36m\]'
cr='\[\e[0;31m\]'
cR='\[\e[1;31m\]'
cB='\[\e[1;34m\]'
cG='\[\e[1;30m\]'
cp='\[\e[1;35m\]'
# Add user/path color brackets color
clr='\[\e[0m\]'

function print_return()
{
    case $1 in
    0)
        echo -e "\e[1;38;5;46m[OK]";;
    127)
        echo -e "\e[1;38;5;208m[404 NOT FOUND]";;
    130)
        echo -e "\e[1;38;5;106m[!@#$%]";;
    137)
        echo -e "\e[1;38;5;129m[FATALITY]";;
    139)
        echo -e "\e[1;38;5;196m[THIS IS SEGFAULT!]";;
    143)
        echo -e "\e[1;38;5;196m[HEADSHOT]";;
    *)
        echo -e "\e[1;35m[$1]";;
    esac
}

# Compute the path if is too long (unused)
function rec_path()
{
    if [ `echo "$2$1" | wc -c` -lt 30 ]; then
        echo "$2$1"
    else
        rec_path `echo "$1" | cut -d'/' -f2-` '../'
    fi
}

# Bash prompt
PS1="\n${rt}[\t] ${cR}[\u@\h:${cB}\w] \
\$(print_return \$?)\n${cR}\$${clr} "

# Common aliases
alias us='setxkbmap us'
alias fr='setxkbmap fr'
alias ls='ls --color'
alias l='ls --color'
alias la='ls -la --color'
alias ll='ls -l --color'
alias ..='cd ..'
alias ...='cd ../..'
alias e='vim'
alias c=' google-chrome || chromium-browser'

# ChmoXXX
alias chmox='chmod +x'

# Makefile aliases
alias m='make'
alias nake='make'
alias cm='./configure && make'
alias bcm='make distclean; ./bootstrap && ./configure && make'
alias bcdm='make distclean; ./bootstrap && ./configure -with-debug && make'
alias mclm='make clean && make'

# Haha like I would use emacs
alias emacs='emacs -nw'
alias ne='emacs'

# Git related aliases
alias gadd='git add -v'
alias gcommit='git commit -am '
alias gpull='git pull -v origin master'
alias gpush='gpull && git push -v origin master'
alias glist='git diff --cached --name-only'
alias gstat='git status'
alias gshow='git ls-tree --name-only -r HEAD'

# EPITA related aliases
alias z='i3lock -c 420042 \
    || zlock -immed -text "Run little kitty. RUN!" -pwtext "XOXOXOXO"'
alias gen='~/.project_gen/gen.sh'

# Programming aliases
alias valgrind='valgrind -v --leak-check=full --show-reachable=yes \
    --track-fds=yes --track-origins=yes'
# Dat flags
alias gppf='g++ -W -Wall -Wextra -Werror -std=c++0x -pedantic'
alias gccf='gcc -std=c99 -pedantic -Wall \
    -Wno-missing-braces -Wextra -Wno-missing-field-initializers -Wformat=2 \
    -Wswitch-default -Wswitch-enum -Wcast-align -Wpointer-arith \
    -Wbad-function-cast -Wstrict-overflow=5 -Wstrict-prototypes -Winline \
    -Wundef -Wnested-externs -Wcast-qual -Wshadow -Wunreachable-code \
    -Wlogical-op -Wfloat-equal -Wstrict-aliasing=2 -Wredundant-decls \
    -Wold-style-definition -Werror \
    -ggdb3 -g \
    -O0 \
    -fno-omit-frame-pointer -ffloat-store -fno-common -fstrict-aliasing'
alias retag='ctags --tag-relative -Rf.git/tags'

# Start ssh-agent
alias ssha='eval $(ssh-agent) && ssh-add'

# Custom aliases
alias am='alsamixer'
alias mmount='sudo mount -t ntfs -o uid=qwazerty,gid=users,umask=0022'
